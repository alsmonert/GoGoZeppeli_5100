/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.Customer;

import java.awt.CardLayout;
import Business.CustomerDirectory;
import Business.Customer;
import Business.FlightSchedule;
import Business.Flights;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author dell
 */
public class ReservedListPanel extends javax.swing.JPanel {

    /**
     * Creates new form ReservedListPanel
     */
    private JPanel travelAgencyCL;
    private CustomerDirectory cd;
    private FlightSchedule fs;

    public ReservedListPanel(JPanel travelAgencyCL, FlightSchedule fs, CustomerDirectory cd) {
        initComponents();
        this.travelAgencyCL = travelAgencyCL;
        this.cd = cd;
        this.fs = fs;
        populate();
    }

    public void populate() {
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        DefaultTableModel dtm = (DefaultTableModel) customerListTBL.getModel();
        dtm.setRowCount(0);
        if (cd != null) {
            for (Customer c : cd.getCustomerDir()) {
                Object[] row = new Object[dtm.getColumnCount()];
                row[0] = c.getName();
                row[1] = c;
                row[2] = c.getFlight().getFlightNum();
                row[3] = sdf.format(c.getFlight().getDate());
                dtm.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        customerListTBL = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        passportTF = new javax.swing.JTextField();
        searchBTN = new javax.swing.JButton();
        backBTN = new javax.swing.JButton();
        ViewBTN = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(681, 483));

        jLabel1.setFont(new java.awt.Font("Consolas", 0, 36)); // NOI18N
        jLabel1.setText("Customer Reversed List");

        customerListTBL.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Passport ID", "Flight", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(customerListTBL);

        jLabel2.setFont(new java.awt.Font("Consolas", 0, 24)); // NOI18N
        jLabel2.setText("Search by passport ID:");

        searchBTN.setText("Search");
        searchBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBTNActionPerformed(evt);
            }
        });

        backBTN.setText("<< Back");
        backBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBTNActionPerformed(evt);
            }
        });

        ViewBTN.setText("View");
        ViewBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(96, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(passportTF)
                        .addGap(18, 18, 18)
                        .addComponent(searchBTN))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 590, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(86, 86, 86))
            .addGroup(layout.createSequentialGroup()
                .addGap(146, 146, 146)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(150, 150, 150)
                .addComponent(backBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ViewBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(140, 140, 140))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(passportTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBTN))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backBTN)
                    .addComponent(ViewBTN))
                .addContainerGap(103, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBTNActionPerformed
        CardLayout cl = (CardLayout) travelAgencyCL.getLayout();
        cl.previous(travelAgencyCL);
        travelAgencyCL.remove(this);
    }//GEN-LAST:event_backBTNActionPerformed

    private void ViewBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewBTNActionPerformed
        int selectedRow = customerListTBL.getSelectedRow();
        if (selectedRow >= 0) {
            Customer c = (Customer) customerListTBL.getValueAt(selectedRow, 1);
            ReservationViewPanel RVP = new ReservationViewPanel(travelAgencyCL, fs, cd, c);
            travelAgencyCL.add("ReservationViewPanel", RVP);
            CardLayout cl = (CardLayout) travelAgencyCL.getLayout();
            cl.next(travelAgencyCL);
        } else {
            JOptionPane.showMessageDialog(this, "Please select a Row!!");
        }
    }//GEN-LAST:event_ViewBTNActionPerformed

    private void searchBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBTNActionPerformed
        if (passportTF.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter something to search!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        try {
            CustomerDirectory result = cd.filterPassport(passportTF.getText());
            DefaultTableModel dtm = (DefaultTableModel) customerListTBL.getModel();
            dtm.setRowCount(0);
            for (Customer c : result.getCustomerDir()) {
                Object[] row = new Object[dtm.getColumnCount()];
                row[0] = c.getName();
                row[1] = c;
                row[2] = c.getFlight().getFlightNum();
                row[3] = sdf.format(c.getFlight().getDate());
                dtm.addRow(row);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Passport number you entered does not exist!!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }

    private void deleteBTNActionPerformed(java.awt.event.ActionEvent evt) {
    }//GEN-LAST:event_searchBTNActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ViewBTN;
    private javax.swing.JButton backBTN;
    private javax.swing.JTable customerListTBL;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField passportTF;
    private javax.swing.JButton searchBTN;
    // End of variables declaration//GEN-END:variables
}
