/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.MasterFlightSchedule;

import Business.Schedule.FlightSchedule;
import Business.Schedule.Flight;
import Business.Airliner.Airliner;
import javax.swing.JPanel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.awt.CardLayout;
import java.text.SimpleDateFormat;

/**
 *
 * @author dell
 */
public class ManageFlightSchedulePanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageFlightSchedulePanel
     */
    private FlightSchedule fs;
    private JPanel travelAgencyCL;
    private Airliner a;
    private FlightSchedule filteredFS;

    public ManageFlightSchedulePanel(JPanel travelAgencyCL, FlightSchedule fs, Airliner a) {
        initComponents();
        this.fs = fs;
        this.travelAgencyCL = travelAgencyCL;
        this.a = a;
        if (a != null)
            airlinerNameLabel.setText(a.getName());
        filteredFS = new FlightSchedule();
        populate();
    }

    public void populate() {
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        DefaultTableModel dtm = (DefaultTableModel) flightScheduleTBL.getModel();
        dtm.setRowCount(0);
        if (a == null) {
            filteredFS = fs;
        } else {
            filteredFS = fs.filterAirliner(a.getName());
        }
        if (filteredFS != null) {
            for (Flight f : filteredFS.getFlightDir()) {
                Object[] row = new Object[dtm.getColumnCount()];
                row[0] = f;
                row[1] = f.getDeparture();
                row[2] = f.getDestination();
                row[3] = sdf.format(f.getDate());
                row[4] = f.getTime();
                dtm.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        flightScheduleLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        flightScheduleTBL = new javax.swing.JTable();
        filterBTN = new javax.swing.JButton();
        viewBTN = new javax.swing.JButton();
        deleteBTN = new javax.swing.JButton();
        addBTN = new javax.swing.JButton();
        filterTF = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        airlinerNameLabel = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(681, 483));

        flightScheduleLabel.setFont(new java.awt.Font("Consolas", 0, 36)); // NOI18N
        flightScheduleLabel.setText("Flight Schedule");

        flightScheduleTBL.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Flight Number", "Depature", "Destination", "Date", "Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(flightScheduleTBL);

        filterBTN.setText("Filter");
        filterBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterBTNActionPerformed(evt);
            }
        });

        viewBTN.setText("View");
        viewBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewBTNActionPerformed(evt);
            }
        });

        deleteBTN.setText("Delete");
        deleteBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBTNActionPerformed(evt);
            }
        });

        addBTN.setText("Add");
        addBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBTNActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Consolas", 0, 20)); // NOI18N
        jLabel2.setText("Filter by flight number");

        airlinerNameLabel.setFont(new java.awt.Font("Consolas", 0, 24)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(55, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(airlinerNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(flightScheduleLabel))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 593, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(filterTF, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(addBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(20, 20, 20)
                                    .addComponent(deleteBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(filterBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(viewBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(33, 33, 33))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(flightScheduleLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(airlinerNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(filterBTN)
                        .addComponent(filterTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewBTN)
                    .addComponent(deleteBTN)
                    .addComponent(addBTN))
                .addGap(43, 43, 43))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void filterBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterBTNActionPerformed
        if (filterTF.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter something to search!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        try {
            FlightSchedule result = filteredFS.filterFlight(filterTF.getText());
            DefaultTableModel dtm = (DefaultTableModel) flightScheduleTBL.getModel();
            dtm.setRowCount(0);

            for (Flight f : result.getFlightDir()) {
                Object[] row = new Object[dtm.getColumnCount()];
                row[0] = f;
                row[1] = f.getDeparture();
                row[2] = f.getDestination();
                row[3] = sdf.format(f.getDate());
                row[4] = f.getTime();
                dtm.addRow(row);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "The number you entered does not exist!!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_filterBTNActionPerformed

    private void viewBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewBTNActionPerformed
        int selectedRow = flightScheduleTBL.getSelectedRow();
        if (selectedRow >= 0) {
            Flight flight = (Flight) flightScheduleTBL.getValueAt(selectedRow, 0);
            FlightViewPanel FVP = new FlightViewPanel(travelAgencyCL, flight, fs);
            travelAgencyCL.add("FlightViewPanel", FVP);
            CardLayout cl = (CardLayout) travelAgencyCL.getLayout();
            cl.next(travelAgencyCL);
        } else {
            JOptionPane.showMessageDialog(this, "Please select a Row!!");
        }
    }//GEN-LAST:event_viewBTNActionPerformed

    private void deleteBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBTNActionPerformed
        int selectedRow = flightScheduleTBL.getSelectedRow();
        if (selectedRow >= 0) {
            int selectionButton = JOptionPane.YES_NO_OPTION;
            int selectionResult = JOptionPane.showConfirmDialog(this, "Are you sure to delete??", "Warning", selectionButton);
            if (selectionResult == JOptionPane.YES_OPTION) {
                Flight f = (Flight) flightScheduleTBL.getValueAt(selectedRow, 0);
                fs.deleteFlight(f);
                populate();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please select a Row!!");
        }
    }//GEN-LAST:event_deleteBTNActionPerformed

    private void addBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBTNActionPerformed

        FlightAddPanel FAP = new FlightAddPanel(travelAgencyCL, fs, a);
        travelAgencyCL.add("FlightAddPanel", FAP);
        CardLayout cl = (CardLayout) travelAgencyCL.getLayout();
        cl.next(travelAgencyCL);
    }//GEN-LAST:event_addBTNActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBTN;
    private javax.swing.JLabel airlinerNameLabel;
    private javax.swing.JButton deleteBTN;
    private javax.swing.JButton filterBTN;
    private javax.swing.JTextField filterTF;
    private javax.swing.JLabel flightScheduleLabel;
    private javax.swing.JTable flightScheduleTBL;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton viewBTN;
    // End of variables declaration//GEN-END:variables
}
