/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.Customer;

import Business.CustomerDirectory;
import Business.Customer;
import Business.FlightSchedule;
import Business.Flights;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author dell
 */
public class CustomerReversePanel extends javax.swing.JPanel {

    /**
     * Creates new form CustomerReversePanel
     */
    private JPanel travelAgencyCL;
    private FlightSchedule fs;
    private CustomerDirectory cd;
    private Flights flight;

    public CustomerReversePanel(JPanel travelAgencyCL, FlightSchedule fs, CustomerDirectory cd, Flights flight) {
        initComponents();
        this.travelAgencyCL = travelAgencyCL;
        this.fs = fs;
        this.cd = cd;
        this.flight = flight;

        seatCB.removeAllItems();
        seatCB.addItem("Window");
        seatCB.addItem("Middle");
        seatCB.addItem("Aisle");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    private int seatLocation(Flights flight, String seat, int row) {
        int result = -1;
        int column1 = -1;
        int column2 = -1;
        if (seat.equals("Window")) {
            column1 = 0;
            column2 = 5;
        } else if (seat.equals("Middle")) {
            column1 = 1;
            column2 = 4;
        } else if (seat.equals("Aisle")) {
            column1 = 2;
            column2 = 3;
        }
        int i = fs.getFlightDir().indexOf(flight);
        if (fs.getFlightDir().get(i).getSeat()[row - 1][column1].equals("Unreserved")) {
            result = column1;
        } else if (fs.getFlightDir().get(i).getSeat()[row - 1][column2].equals("Unreserved")) {
            result = column2;
        }
        return result;
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        nameTF = new javax.swing.JTextField();
        idTF = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        seatCB = new javax.swing.JComboBox();
        rowTF = new javax.swing.JTextField();
        confirmBNT = new javax.swing.JButton();
        backBTN = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(681, 483));

        jLabel1.setFont(new java.awt.Font("Consolas", 0, 36)); // NOI18N
        jLabel1.setText("Customer Reverse");

        jLabel2.setFont(new java.awt.Font("Consolas", 0, 24)); // NOI18N
        jLabel2.setText("Name");

        jLabel3.setFont(new java.awt.Font("Consolas", 0, 24)); // NOI18N
        jLabel3.setText("Passport ID");

        jLabel4.setFont(new java.awt.Font("Consolas", 0, 24)); // NOI18N
        jLabel4.setText("Seat Position");

        jLabel5.setFont(new java.awt.Font("Consolas", 0, 24)); // NOI18N
        jLabel5.setText("Row");

        seatCB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        confirmBNT.setText("Confirm");
        confirmBNT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmBNTActionPerformed(evt);
            }
        });

        backBTN.setText("<< Back");
        backBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(195, 195, 195)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(156, 156, 156)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(backBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(134, 134, 134)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(confirmBNT, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(nameTF)
                                .addComponent(idTF)
                                .addComponent(seatCB, 0, 110, Short.MAX_VALUE)
                                .addComponent(rowTF)))))
                .addGap(313, 313, 313))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(nameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(idTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(seatCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(rowTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backBTN)
                    .addComponent(confirmBNT))
                .addContainerGap(146, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBTNActionPerformed
        CardLayout cl = (CardLayout) travelAgencyCL.getLayout();
        cl.previous(travelAgencyCL);
        travelAgencyCL.remove(this);
    }//GEN-LAST:event_backBTNActionPerformed

    private void confirmBNTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmBNTActionPerformed
        if (nameTF.getText().isEmpty() || idTF.getText().isEmpty() || rowTF.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter all fields!!", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            String name = nameTF.getText();
            String id = idTF.getText();
            int row = -1;
            try {
                row = Integer.parseInt(rowTF.getText());
            } catch (NumberFormatException exc) {
                JOptionPane.showMessageDialog(this, "Please fill integer in row field!!");
                return;
            }
            if (row > 26 || row < 1) {
                JOptionPane.showMessageDialog(this, "Please fill integer smaller than 26 and larger than zero in row field!!");
                return;
            }
            String seat = (String) seatCB.getSelectedItem();
            if (seatLocation(flight, seat, row) == -1) {
                JOptionPane.showMessageDialog(this, "The seat is reserved!!");
                return;
            }
            int selectionButton = JOptionPane.YES_NO_OPTION;
            int selectionResult = JOptionPane.showConfirmDialog(this, "Are you sure to conform??", "Warning", selectionButton);
            if (selectionResult == JOptionPane.YES_OPTION) {
                Customer customer = new Customer();
                customer.setName(name);
                customer.setSeatRow(row);
                customer.setSeatCol(seatLocation(flight, seat, row));
                customer.setUniqID(id);
                customer.setFlight(flight);
                cd.getCustomerDir().add(customer);
                int i = fs.getFlightDir().indexOf(flight);
                fs.getFlightDir().get(i).addReservation(row - 1, seatLocation(flight, seat, row), id);
                //fs.getFlightDir().get(i).getSeat()[row-1][seatLocation(flight, seat, row)]
                JOptionPane.showMessageDialog(this, "The seat reserved successfully!!");
            }

        }
    }//GEN-LAST:event_confirmBNTActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBTN;
    private javax.swing.JButton confirmBNT;
    private javax.swing.JTextField idTF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField nameTF;
    private javax.swing.JTextField rowTF;
    private javax.swing.JComboBox seatCB;
    // End of variables declaration//GEN-END:variables
}
