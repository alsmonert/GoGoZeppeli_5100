/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.ChariryManagerRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.Manufactory;
import Business.Enterprise.Storage;
import Business.Network;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import userinterface.SchoolRole.ViewSchoolRequestJPanel;

/**
 *
 * @author MS
 */
public class CharityManagerWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CharityWorkJPanel
     */
    private JPanel container;
//    private DB4OUtil dB4OUtil = DB4OUtil.getInstance();
    private Network network;
    private UserAccount account;

    public CharityManagerWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, Network network) {
        initComponents();
        this.container = userProcessContainer;
        this.network = network;
        this.account = account;
        populateCharityTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        CharityHistoryTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        CharityWorkTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        approvebtn = new javax.swing.JButton();
        viewbtn = new javax.swing.JButton();
        rejectbtn = new javax.swing.JButton();
        viewhistorybtn = new javax.swing.JButton();
        ManufactoryCB = new javax.swing.JComboBox<>();
        StorageCB = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(33, 63, 86));

        jScrollPane1.setForeground(new java.awt.Color(255, 255, 255));

        CharityHistoryTable.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        CharityHistoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Request ID", "Amount", "Status"
            }
        ));
        jScrollPane1.setViewportView(CharityHistoryTable);

        jScrollPane2.setForeground(new java.awt.Color(255, 255, 255));

        CharityWorkTable.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        CharityWorkTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Request ID", "Amount", "Status"
            }
        ));
        jScrollPane2.setViewportView(CharityWorkTable);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Processing");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("History");

        approvebtn.setBackground(new java.awt.Color(108, 122, 137));
        approvebtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        approvebtn.setForeground(new java.awt.Color(255, 255, 255));
        approvebtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/image/tongyi.png"))); // NOI18N
        approvebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approvebtnActionPerformed(evt);
            }
        });

        viewbtn.setBackground(new java.awt.Color(44, 62, 80));
        viewbtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        viewbtn.setForeground(new java.awt.Color(255, 255, 255));
        viewbtn.setText("View");
        viewbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewbtnActionPerformed(evt);
            }
        });

        rejectbtn.setBackground(new java.awt.Color(108, 122, 137));
        rejectbtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        rejectbtn.setForeground(new java.awt.Color(255, 255, 255));
        rejectbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/image/butongyi.png"))); // NOI18N
        rejectbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rejectbtnActionPerformed(evt);
            }
        });

        viewhistorybtn.setBackground(new java.awt.Color(44, 62, 80));
        viewhistorybtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        viewhistorybtn.setForeground(new java.awt.Color(255, 255, 255));
        viewhistorybtn.setText("View");
        viewhistorybtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewhistorybtnActionPerformed(evt);
            }
        });

        ManufactoryCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        StorageCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(115, 115, 115)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(192, 192, 192)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(viewbtn)
                                    .addComponent(jLabel2))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ManufactoryCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(StorageCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(approvebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(rejectbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(307, 307, 307)
                        .addComponent(viewhistorybtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(302, 302, 302)
                        .addComponent(jLabel1)))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ManufactoryCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(StorageCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addComponent(approvebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(rejectbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(viewbtn)
                .addGap(42, 42, 42)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(viewhistorybtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void approvebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approvebtnActionPerformed
        int selectedRow = CharityWorkTable.getSelectedRow();
        Manufactory manufactory = (Manufactory) ManufactoryCB.getSelectedItem();
        Storage storage = (Storage) StorageCB.getSelectedItem();
        if (selectedRow >= 0) {
            WorkRequest request = (WorkRequest) CharityWorkTable.getValueAt(selectedRow, 0);
            request.setStatus("Approved");
            request.setManufactoryTodo(manufactory);
            request.setStorageTodo(storage);
            request.setCharity(account);
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        populateCharityTable();
    }//GEN-LAST:event_approvebtnActionPerformed

    private void viewbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewbtnActionPerformed
        int selectedRow = CharityWorkTable.getSelectedRow();
        if (selectedRow >= 0) {
            WorkRequest request = (WorkRequest) CharityWorkTable.getValueAt(selectedRow, 0);
            ViewCharityRequestJPanel viewCharityRequestJPanel = new ViewCharityRequestJPanel(request, container, account, network);
            container.add("ViewCharityRequestJPanel", viewCharityRequestJPanel);
            CardLayout layout = (CardLayout) container.getLayout();
            layout.next(container);
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_viewbtnActionPerformed

    private void viewhistorybtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewhistorybtnActionPerformed
        int selectedRow = CharityHistoryTable.getSelectedRow();
        if (selectedRow >= 0) {
            WorkRequest request = (WorkRequest) CharityHistoryTable.getValueAt(selectedRow, 0);
            ViewCharityRequestJPanel viewCharityRequestJPanel = new ViewCharityRequestJPanel(request, container, account, network);
            container.add("ViewCharityRequestJPanel", viewCharityRequestJPanel);
            CardLayout layout = (CardLayout) container.getLayout();
            layout.next(container);
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_viewhistorybtnActionPerformed

    private void rejectbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rejectbtnActionPerformed
        int selectedRow = CharityWorkTable.getSelectedRow();
        if (selectedRow >= 0) {
            WorkRequest request = (WorkRequest) CharityWorkTable.getValueAt(selectedRow, 0);
            request.setStatus("Rejected");
            request.setCharity(account);
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        populateCharityTable();

    }//GEN-LAST:event_rejectbtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable CharityHistoryTable;
    private javax.swing.JTable CharityWorkTable;
    private javax.swing.JComboBox<Object> ManufactoryCB;
    private javax.swing.JComboBox<Object> StorageCB;
    private javax.swing.JButton approvebtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton rejectbtn;
    private javax.swing.JButton viewbtn;
    private javax.swing.JButton viewhistorybtn;
    // End of variables declaration//GEN-END:variables

    public void populateCharityTable() {
        ManufactoryCB.removeAllItems();
        StorageCB.removeAllItems();
        for(Enterprise ep:network.getEnterpriseDirectory().getEnterpriseList()) {
            if(ep instanceof Manufactory){ManufactoryCB.addItem(ep);}
            else if(ep instanceof Storage){StorageCB.addItem(ep);}
            else{}
        }
        DefaultTableModel dtm1 = (DefaultTableModel) CharityWorkTable.getModel();
        dtm1.setRowCount(0);
        for (WorkRequest req : network.getPool().getWorkRequestList()) {
            if(req.getCharityTodo()==null){}
            else if(req.getCharityTodo().getName().equals(account.getEmployee().getOrganization().getEnterprise().getName()))
            {if(req.getStatus().equals("Pending")){
            Object[] row1 = new Object[3];
            row1[0] = req;
            row1[1] = req.getAmount();
            row1[2] = req.getStatus();
            dtm1.addRow(row1);}}
        }
        
        DefaultTableModel dtm2 = (DefaultTableModel) CharityHistoryTable.getModel();
        dtm2.setRowCount(0);
        for (WorkRequest req : network.getPool().getWorkRequestList()) {
            if(req.getCharity()!=null){if(req.getCharity().getEmployee().getOrganization().equals(account.getEmployee().getOrganization())){
            Object[] row2 = new Object[3];
            row2[0] = req;
            row2[1] = req.getAmount();
            row2[2] = req.getStatus();
            dtm2.addRow(row2);}}
        }
        
        
    }
}
