/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.StorageRole;

import Business.DB4OUtil.DB4OUtil;
import Business.Network;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import userinterface.SellRole.ViewSellRequestJPanel;

/**
 *
 * @author MS
 */
public class StorageWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form StorageWorkAreaJPanel
     */private JPanel container;
//    private DB4OUtil dB4OUtil = DB4OUtil.getInstance();
    private Network network;
    private UserAccount account;
    private DB4OUtil dB4OUtil = DB4OUtil.getInstance();
    public StorageWorkAreaJPanel(JPanel userProcessContainer,UserAccount account, Network network) {
        initComponents();
        this.container = userProcessContainer;
        this.network = network;
        this.account = account;
        populateStorageTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        StorageHistoryTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        StorageWorkTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        ViewBtn = new javax.swing.JButton();
        ViewHistoryBtn = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setBackground(new java.awt.Color(33, 63, 86));

        jScrollPane1.setForeground(new java.awt.Color(255, 255, 255));

        StorageHistoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Request ID", "Amount", "Status"
            }
        ));
        jScrollPane1.setViewportView(StorageHistoryTable);

        jScrollPane2.setForeground(new java.awt.Color(255, 255, 255));

        StorageWorkTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Request ID", "Amount", "Status"
            }
        ));
        jScrollPane2.setViewportView(StorageWorkTable);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Processing");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("History");

        ViewBtn.setBackground(new java.awt.Color(44, 62, 80));
        ViewBtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ViewBtn.setForeground(new java.awt.Color(255, 255, 255));
        ViewBtn.setText("View");
        ViewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewBtnActionPerformed(evt);
            }
        });

        ViewHistoryBtn.setBackground(new java.awt.Color(44, 62, 80));
        ViewHistoryBtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ViewHistoryBtn.setForeground(new java.awt.Color(255, 255, 255));
        ViewHistoryBtn.setText("View");
        ViewHistoryBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewHistoryBtnActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(44, 62, 80));
        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Obtain");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(44, 62, 80));
        jButton2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Send");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jButton1)
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35)
                                .addComponent(jButton2))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(341, 341, 341)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(348, 348, 348)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(330, 330, 330)
                        .addComponent(ViewBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(340, 340, 340)
                        .addComponent(ViewHistoryBtn)))
                .addContainerGap(133, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(ViewBtn)
                .addGap(30, 30, 30)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ViewHistoryBtn)
                .addContainerGap(151, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ViewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewBtnActionPerformed
        int selectedRow = StorageWorkTable.getSelectedRow();
        if (selectedRow >= 0) {
            WorkRequest request = (WorkRequest) StorageWorkTable.getValueAt(selectedRow, 0);
            ViewStorageRequestJPanel viewStorageRequestJPanel = new ViewStorageRequestJPanel(request, container, account, network);
            container.add("ViewStorageRequestJPanel", viewStorageRequestJPanel);
            CardLayout layout = (CardLayout) container.getLayout();
            layout.next(container);
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_ViewBtnActionPerformed

    private void ViewHistoryBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewHistoryBtnActionPerformed
       int selectedRow = StorageHistoryTable.getSelectedRow();
        if (selectedRow >= 0) {
            WorkRequest request = (WorkRequest) StorageHistoryTable.getValueAt(selectedRow, 0);
            ViewStorageRequestJPanel viewStorageRequestJPanel = new ViewStorageRequestJPanel(request, container, account, network);
            container.add("ViewStorageRequestJPanel", viewStorageRequestJPanel);
            CardLayout layout = (CardLayout) container.getLayout();
            layout.next(container);
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_ViewHistoryBtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       int selectedRow = StorageWorkTable.getSelectedRow();
        if (selectedRow >= 0) {
            WorkRequest request = (WorkRequest) StorageWorkTable.getValueAt(selectedRow, 0);
            request.setStatus("Stored");
            request.setStorage(account);
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        populateStorageTable();
         
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int selectedRow = StorageWorkTable.getSelectedRow();
        if (selectedRow >= 0) {
            WorkRequest request = (WorkRequest) StorageWorkTable.getValueAt(selectedRow, 0);
            request.setStatus("Sending");
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        populateStorageTable();
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable StorageHistoryTable;
    private javax.swing.JTable StorageWorkTable;
    private javax.swing.JButton ViewBtn;
    private javax.swing.JButton ViewHistoryBtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables

    void populateStorageTable() {
        DefaultTableModel dtm1 = (DefaultTableModel) StorageWorkTable.getModel();
        dtm1.setRowCount(0);
        for (WorkRequest req : network.getPool().getWorkRequestList()) {if (req.getStorageTodo().getName()==null){}
            else if(req.getStorageTodo().getName().equals(account.getEmployee().getOrganization().getEnterprise().getName()))
            {if(req.getStatus().equals("Sold")||req.getStatus().equals("Stored")){
            Object[] row1 = new Object[3];
            row1[0] = req;
            row1[1] = req.getAmount();
            row1[2] = req.getStatus();
            dtm1.addRow(row1);}}
        }
        
        DefaultTableModel dtm2 = (DefaultTableModel) StorageHistoryTable.getModel();
        dtm2.setRowCount(0);
        for (WorkRequest req : network.getPool().getWorkRequestList()) {
            if(req.getStorage()!=null){if(req.getStorage().getEmployee().getOrganization().equals(account.getEmployee().getOrganization())){
            Object[] row2 = new Object[3];
            row2[0] = req;
            row2[1] = req.getAmount();
            row2[2] = req.getStatus();
            dtm2.addRow(row2);}}
        }
    }
}
